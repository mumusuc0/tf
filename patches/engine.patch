diff --git a/engine/src/build/config/BUILDCONFIG.gn b/engine/src/build/config/BUILDCONFIG.gn
index b74b2e2..3e907b8 100644
--- a/engine/src/build/config/BUILDCONFIG.gn
+++ b/engine/src/build/config/BUILDCONFIG.gn
@@ -167,6 +167,7 @@ declare_args() {
   }
 
   # DON'T ADD MORE FLAGS HERE. Read the comment above.
+  is_termux = false
 }
 
 # =============================================================================
@@ -343,13 +344,13 @@ if (is_msan && !is_linux) {
 # duplication in each target below.
 _native_compiler_configs = [
   "//build/config:feature_flags",
-  "//build/config/compiler:compiler",
+  "//build/config/termux:compiler",
   "//build/config/compiler:cxx_version_default",
   "//build/config/compiler:compiler_arm_fpu",
   "//build/config/compiler:chromium_code",
   "//build/config/compiler:default_include_dirs",
   "//build/config/compiler:no_rtti",
-  "//build/config/compiler:runtime_library",
+  "//build/config/termux:runtime_library",
 ]
 
 if (use_flutter_cxx) {
@@ -378,7 +379,7 @@ if (is_posix) {
 }
 
 if (is_linux) {
-  _native_compiler_configs += [ "//build/config/linux:sdk" ]
+  _native_compiler_configs += [ "//build/config/termux:sdk" ]
 } else if (is_mac) {
   _native_compiler_configs += [ "//build/config/mac:sdk" ]
 } else if (is_ios) {
@@ -457,7 +458,7 @@ if (is_win) {
     "//build/config/mac:mac_executable_flags",
   ]
 } else if (is_linux || is_android) {
-  _executable_configs += [ "//build/config/gcc:executable_ldconfig" ]
+  _executable_configs += [ "//build/config/termux:executable_ldconfig" ]
   if (is_android) {
     _executable_configs += [ "//build/config/android:executable_config" ]
   }
@@ -521,7 +522,10 @@ import("//build/toolchain/custom/custom.gni")
 # shlib_toolchain is a Fuchsia-specific symbol and not used by Flutter.
 shlib_toolchain = false
 
-if (custom_toolchain != "") {
+if (is_termux) {
+  host_toolchain = "//build/toolchain/termux:termux"
+  set_default_toolchain("//build/toolchain/termux")
+} else if (custom_toolchain != "") {
   assert(custom_sysroot != "")
   assert(custom_target_triple != "")
   host_toolchain = "//build/toolchain/linux:clang_$host_cpu"
diff --git a/engine/src/build/config/termux/BUILD.gn b/engine/src/build/config/termux/BUILD.gn
new file mode 100644
index 0000000..eba701b
--- /dev/null
+++ b/engine/src/build/config/termux/BUILD.gn
@@ -0,0 +1,37 @@
+config("compiler") {
+  cflags = ["-fno-strict-aliasing", "-fstack-protector", "--param=ssp-buffer-size=8", "-fPIC", "-pipe", "-fcolor-diagnostics", "-ffunction-sections", "-funwind-tables", "-fno-short-enums", "-nostdinc++", "--target=$custom_target_triple"]
+  cflags_cc = ["-fvisibility-inlines-hidden"]
+  cflags_objcc = ["-fvisibility-inlines-hidden"]
+  ldflags = ["-Wl,--fatal-warnings", "-fPIC", "-Wl,-z,noexecstack", "-Wl,-z,now", "-Wl,-z,relro", "-Wl,-z,defs", "-Wl,--undefined-version", "-Wl,--no-undefined", "-Wl,--exclude-libs,ALL", "-Wl,--icf=all", "-Wl,-z,max-page-size=65536", "--target=$custom_target_triple"]
+  defines = ["__TERMUX__", "HAVE_SYS_UIO_H"]
+  asmflags = cflags
+}
+
+config("runtime_library") {
+  cflags_cc = ["-nostdinc++"]
+  defines = ["__compiler_offsetof=__builtin_offsetof", "nan=__builtin_nan"]
+  ldflags = ["-stdlib=libstdc++", "-Wl,--warn-shared-textrel"]
+  lib_dirs = [ "$custom_toolchain/lib/clang/19/lib/linux/" ]
+  include_dirs = [
+    "//flutter/third_party/libcxx/include",
+    "//flutter/third_party/libcxxabi/include",
+  ]
+}
+
+config("executable_ldconfig") {
+    ldflags = ["-Bdynamic", "-Wl,-z,nocopyreloc"]
+}
+
+import("//build/config/sysroot.gni")
+
+config("sdk") {
+  cflags = []
+  ldflags = []
+  if (defined(custom_sysroot) && custom_sysroot != "") {
+    cflags += [ "--sysroot=" + custom_sysroot ]
+    ldflags += [ "--sysroot=" + custom_sysroot ]
+  }
+  if (defined(target_sysroot) && target_sysroot != "") {
+    cflags += [ "-idirafter$target_sysroot/usr/include" ]
+  }
+}
diff --git a/engine/src/build/toolchain/termux/BUILD.gn b/engine/src/build/toolchain/termux/BUILD.gn
new file mode 100644
index 0000000..004bc9d
--- /dev/null
+++ b/engine/src/build/toolchain/termux/BUILD.gn
@@ -0,0 +1,17 @@
+import("//build/toolchain/gcc_toolchain.gni")
+
+gcc_toolchain("termux") {
+    is_clang = true
+    toolchain_os = "android"
+    toolchain_cpu = "${target_cpu}"
+
+    prefix = "$custom_toolchain/bin"
+    cc = prefix + "/clang"
+    cxx = prefix + "/clang++"
+    asm = prefix + "/clang"
+    ar = prefix + "/llvm-ar"
+    ld = prefix + "/clang++"
+    readelf = prefix + "/llvm-readelf"
+    nm = prefix + "/llvm-nm"
+    strip = prefix + "/llvm-strip"
+}
diff --git a/engine/src/flutter/shell/testing/BUILD.gn b/engine/src/flutter/shell/testing/BUILD.gn
index 28a19c7..e7c7a69 100644
--- a/engine/src/flutter/shell/testing/BUILD.gn
+++ b/engine/src/flutter/shell/testing/BUILD.gn
@@ -56,6 +56,10 @@ executable("testing") {
       "//flutter/impeller",
       "//flutter/third_party/swiftshader/src/Vulkan:swiftshader_libvulkan_static",
     ]
+    if (is_termux) {
+      libs += [ "vulkan" ]
+      deps -= [ "//flutter/third_party/swiftshader/src/Vulkan:swiftshader_libvulkan_static" ]
+    }
   }
 
   metadata = {
